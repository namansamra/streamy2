[{"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\index.js":"1","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\app.js":"2","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\utils\\jwt.js":"3","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\actions\\auth.js":"4","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\reducers\\index.js":"5","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\navbar.js":"6","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\Home.js":"7","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\createStream.js":"8","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\mystreams.js":"9","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\signup.js":"10","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\login.js":"11","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\protectedroute.js":"12","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\config\\firebase.js":"13","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\utils\\setheader.js":"14","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\editstream.js":"15","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\reducers\\Flashmessages.js":"16","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\reducers\\User.js":"17","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\actions\\flashmessage.js":"18","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\flash\\FlashMessage.js":"19","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\flash\\FlashMessageList.js":"20"},{"size":789,"mtime":1612612058097,"results":"21","hashOfConfig":"22"},{"size":1055,"mtime":1612638515719,"results":"23","hashOfConfig":"22"},{"size":221,"mtime":1612612058100,"results":"24","hashOfConfig":"22"},{"size":1537,"mtime":1612625521954,"results":"25","hashOfConfig":"22"},{"size":206,"mtime":1612638445384,"results":"26","hashOfConfig":"22"},{"size":2684,"mtime":1612623833884,"results":"27","hashOfConfig":"22"},{"size":1750,"mtime":1612612058081,"results":"28","hashOfConfig":"22"},{"size":3481,"mtime":1612623975215,"results":"29","hashOfConfig":"22"},{"size":5690,"mtime":1612623926682,"results":"30","hashOfConfig":"22"},{"size":2411,"mtime":1612639255552,"results":"31","hashOfConfig":"22"},{"size":2547,"mtime":1612637611045,"results":"32","hashOfConfig":"22"},{"size":740,"mtime":1612637345718,"results":"33","hashOfConfig":"22"},{"size":492,"mtime":1612612058096,"results":"34","hashOfConfig":"22"},{"size":261,"mtime":1612612058101,"results":"35","hashOfConfig":"22"},{"size":1695,"mtime":1612612058085,"results":"36","hashOfConfig":"22"},{"size":448,"mtime":1612638243113,"results":"37","hashOfConfig":"22"},{"size":359,"mtime":1612622302674,"results":"38","hashOfConfig":"22"},{"size":220,"mtime":1612624516327,"results":"39","hashOfConfig":"22"},{"size":898,"mtime":1612638484083,"results":"40","hashOfConfig":"22"},{"size":376,"mtime":1612638324816,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1g7izeo",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\index.js",[],["86","87"],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\app.js",["88"],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\utils\\jwt.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\actions\\auth.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\reducers\\index.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\navbar.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\Home.js",["89"],"import React ,{useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './styles/home.scss'\r\n\r\nconst Home = ()=>{\r\n\r\n\r\nconst [live_streams,setStreams] = useState([]);\r\n\r\nuseEffect (()=>{\r\n    fetch(\"http://35.247.156.160:8000/api/streams\")\r\n        .then(data=>data.json())\r\n        .then(res=>{\r\n            let streams = res;\r\n                if (streams['live'] !== undefined) {\r\n                    getStreamsInfo(streams['live']);\r\n                }\r\n        })\r\n        .catch(err=>console.log(err))\r\n},[])\r\n\r\nfunction getStreamsInfo(streams) {\r\n    const list = JSON.stringify(streams);\r\n    fetch(`/api/stream/getstreams?list=${list}`)\r\n        .then(data=>data.json())\r\n        .then(res=>{\r\n            setStreams(res)\r\n        })\r\n}\r\n\r\n\r\n    let streams = live_streams.map((stream, index) => {\r\n        return (\r\n            <div className=\"stream col-xs-12 col-sm-12 col-md-3 col-lg-4\" key={index}>\r\n                <span className=\"live-label\">LIVE</span>\r\n                <Link to={'/stream/' + stream.key}>\r\n                    <div className=\"stream-thumbnail\">\r\n                        <img src={'http://localhost:8000/images/' + stream.key + '.png'}/>\r\n                        <span className=\"username\" style = {{color : 'white'}}>                   \r\n                            {stream.email}\r\n                        </span>\r\n                    </div>\r\n                </Link>\r\n\r\n                \r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h4>Live Streams</h4>\r\n            <hr className=\"my-4\"/>\r\n\r\n            <div className=\"streams row\">\r\n                {streams}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\createStream.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\mystreams.js",["90","91"],"import React ,{useEffect,useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport swal from 'sweetalert'\r\nimport setHeaders from '../utils/setheader';\r\n\r\nimport EditModal from './editstream'\r\n\r\n\r\nconst MyStream = (props)=>{\r\n\r\n    const [myStreams,setStreams] = useState([]);\r\n    const [modalState,setModalState] = useState(false);\r\n    const [currStream,setCurrStream] = useState({});\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(props);\r\n        fetch(`/api/stream/getstreams/${props.user.email}`,{\r\n            headers : new Headers({\r\n                'Accept' : 'application/json' ,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                setStreams(data)\r\n            })\r\n        \r\n    },[])\r\n\r\n     function deleteStream(key){\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this stream!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n          })\r\n          .then(async (willDelete) => {\r\n            if (willDelete) {\r\n\r\n            const res = await fetch(`/api/stream/delete/${key}`,{\r\n                            method : 'DELETE',\r\n                            headers : setHeaders({\r\n                                'Accept' : 'application/json' ,\r\n                                'Content-Type': 'application/json'\r\n                            })\r\n                        })\r\n                const deleted = await res.json()\r\n                console.log(deleted)\r\n            if(deleted){\r\n                    swal(\"Stream Deleted\", {\r\n                        icon: \"success\",\r\n                    });\r\n                    const newStreams = myStreams.filter(st=>st.key!==key);\r\n                    setStreams(newStreams)\r\n                }\r\n                else {\r\n                    swal(\"Deletion failed\");\r\n                  }\r\n            } else {\r\n              swal(\"Deletion failed\");\r\n            }\r\n          });\r\n    }\r\n\r\n\r\n    function updateStream(idx){\r\n        setModalState(true);\r\n        setCurrStream({\r\n            idx : idx,\r\n            title : myStreams[idx].title,\r\n            description : myStreams[idx].description,\r\n            key : myStreams[idx].key\r\n        })\r\n    }\r\n    function closeModal(){\r\n        setModalState(false)\r\n    }\r\n    async function handleUpdate(newTitle,newDes){\r\n        const res = await fetch(`/api/stream/update/${currStream.key}`,{\r\n            method : 'PUT',\r\n            headers : setHeaders({\r\n                'Accept' : 'application/json' ,\r\n                'Content-Type': 'application/json'\r\n            }),\r\n            body : JSON.stringify({title : newTitle,description : newDes})\r\n        })  \r\n        const updated = await res.json();\r\n            if(updated){\r\n                const newStreams = [...myStreams];\r\n                const idx = currStream.idx;\r\n                newStreams[idx].title = newTitle;\r\n                newStreams[idx].description = newDes;\r\n                setStreams(newStreams);\r\n                setModalState(false);\r\n                setCurrStream({});\r\n                swal(\"Stream Details Updated\", {\r\n                    icon: \"success\",\r\n                });\r\n            }\r\n            else {\r\n                swal(\"Updation failed\");\r\n            }\r\n    }\r\n\r\n    const streams = myStreams.map((st,index)=>{\r\n        return (\r\n\r\n        \r\n        <div className=\"list-group-item list-group-item-action flex-column align-items-start \" onClick = {(e)=>{\r\n            swal('Stream Key',st.key)\r\n        }}>\r\n            <div className = 'd-flex'>\r\n                <div className = 'd-flex align-items-center'>\r\n                <img src = {'http://localhost:8000/images/6TZZj5UDW1cShhUnrJ71b.png'} style = {{width:'10vw',height:'10vh',margin:'10px'}}></img>\r\n                </div>\r\n                <div style = {{width:'100%',padding:'10px'}}>\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                        <h5 className=\"mb-1\">{st.title}</h5>\r\n                        <small>3 days ago</small>\r\n                        </div>\r\n                        <p className=\"mb-1\" style = {{textAlign:'justify'}} >{st.description}</p>\r\n                        <div className = \"d-flex w-100 justify-content-between\">\r\n                        <small>Not Live</small>    \r\n                        <div>\r\n                            <button className  = 'btn btn-dark' onClick = {(e)=>{\r\n                                e.stopPropagation();\r\n                                updateStream(index)\r\n                            }}>Edit</button>\r\n                            <button className  = 'btn btn-dark mx-1'onClick = {(e)=>{\r\n                                e.stopPropagation()\r\n                                deleteStream(st.key)\r\n                            }}>Delete</button>\r\n\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n        )\r\n    })\r\n    return(\r\n        <div className=\"container mt-5\">\r\n            {modalState ? <EditModal showModal = {modalState} stream = {currStream} closeModal = {closeModal} updateStream = {handleUpdate}/> : null}\r\n            <h4 className = 'text-center'>My Streams</h4>\r\n            <hr className=\"my-4\"/>\r\n                <div class=\"list-group\">\r\n                    {streams}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return  {\r\n        user : state.user.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MyStream);","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\signup.js",["92"],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\login.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\protectedroute.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\config\\firebase.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\utils\\setheader.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\editstream.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\reducers\\Flashmessages.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\reducers\\User.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\actions\\flashmessage.js",[],"C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\flash\\FlashMessage.js",["93"],"import React, { useEffect } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteFlashMessage } from \"../../actions/flashmessage\";\r\n\r\nfunction FlashMessage(props) {\r\n  const { id, type, text } = props.message;\r\n  useEffect(() => {\r\n    const token = setInterval(() => {\r\n      props.deleteFlashMessage(id);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(token);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={classnames(\"alert\", \"text-center\", {\r\n          \"alert-success\": type === \"success\",\r\n          \"alert-danger\": type === \"error\",\r\n        })}\r\n      >\r\n        {text}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      message: state.flashmessage,\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, {\r\n  deleteFlashMessage: deleteFlashMessage,\r\n})(FlashMessage);\r\n","C:\\Users\\naman\\Desktop\\clonedApp\\streamy\\client\\src\\components\\flash\\FlashMessageList.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":38,"column":25,"nodeType":"104","endLine":38,"endColumn":91},{"ruleId":"105","severity":1,"message":"106","line":29,"column":7,"nodeType":"107","endLine":29,"endColumn":9,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"103","line":116,"column":17,"nodeType":"104","endLine":116,"endColumn":140},{"ruleId":"105","severity":1,"message":"109","line":15,"column":6,"nodeType":"107","endLine":15,"endColumn":12,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":32,"column":7,"nodeType":"100","messageId":"101","endLine":32,"endColumn":22},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],"'mapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [props]",{"range":"120","text":"121"},"Update the dependencies array to be: [history, user]",{"range":"122","text":"123"},[812,814],"[props]",[487,493],"[history, user]"]